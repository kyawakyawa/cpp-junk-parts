name: build-and-test
on: [push]
jobs:
  build-and-test-on-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # https://itneko.com/actions-checkout/
          #token: ${{ secrets.SUB_MODULE_TOKEN }}
          submodules: true
      - name: Restore from cache and install vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          setupOnly: true
      - name: install library
        run: |
          $VCPKG_ROOT/vcpkg update
          $VCPKG_ROOT/vcpkg install eigen3:x64-linux
          $VCPKG_ROOT/vcpkg install glog:x64-linux
          sudo apt install -y libglfw3 libglfw3-dev libglew-dev
        shell: bash
      - name: use clang12
        run: |
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-12 1000
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 1000
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-12 1000
          sudo apt install -y clang-tidy-12 
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-12 1000
          update-alternatives --config clang
        shell: bash
      - name: CMake Configure
        run: |
          CC=clang CXX=clang++ cmake -Bcmake-build-release -H. \
                                     -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
                                     -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
                                     -DCMAKE_BUILD_TYPE=Release \
                                     -DBUILD_WITH_MARCH_NATIVE=OFF \
                                     -DUSE_CCACHE=OFF \
                                     -DUSE_CPP20=ON \
                                     -DUSE_SANITIZER=OFF \
                                     -DUSE_STACK_TRACE_LOGGER=ON \
                                     -DAPPLY_CLANG_FORMAT=ON

          cp cmake-build-release/compile_commands.json ./compile_commands.json
      - name: do clang-tidy
        run: |
          ./script/do-clang-tidy.sh
      - name: build
        run: |
          cd cmake-build-release
          make -j4
        shell: bash
      - name: run_test
        run: |
          pwd
          cd cmake-build-release
          ./c-quartic-equation
          ./quartic-equation
        shell: bash
      - name: check git diff
        run: |
          git diff-index --exit-code --ignore-submodules HEAD
  build-and-test-on-windows:
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # https://itneko.com/actions-checkout/
          #token: ${{ secrets.SUB_MODULE_TOKEN }}
          submodules: true
      - name: Add Ninja # Ninjaを導入
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Add cl and nmake to PATH # Ninja+cl.exeを実現するために必要(cl.exe nmake.exeにPATHを通す)
        uses: ilammy/msvc-dev-cmd@v1
      - name: install library
        shell: powershell
        run: |
          C:\vcpkg\vcpkg.exe update
          C:\vcpkg\vcpkg.exe install eigen3:x64-windows
          C:\vcpkg\vcpkg.exe install glog:x64-windows
          C:\vcpkg\vcpkg.exe install glew:x64-windows
          C:\vcpkg\vcpkg.exe install glfw3:x64-windows
      - name: build
        shell: powershell
        run: |
          $buildDirectory = "build_win_x64"
          mkdir $buildDirectory -Force -ErrorAction Stop | Out-Null
          cd $buildDirectory
          cmake  -G Ninja `
                 -D CMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake `
                 -D CMAKE_EXPORT_COMPILE_COMMANDS=1 `
                 -D CMAKE_BUILD_TYPE=Release `
                 -D BUILD_WITH_MARCH_NATIVE=OFF `
                 -D USE_CCACHE=OFF `
                 -D USE_CPP20=OFF `
                 -D USE_SANITIZER=OFF `
                 -D USE_STACK_TRACE_LOGGER=ON `
                 -D APPLY_CLANG_FORMAT=OFF `
                 ..
                  # TODO -D USE_CPP20=ON
          ninja -j2
          dir
          .\c-quartic-equation.exe
